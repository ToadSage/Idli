From 271032fbc6ccc37f4502640be867e4a23d4bcf50 Mon Sep 17 00:00:00 2001
From: ernie cohen <ernie.cohen@acm.org>
Date: Fri, 9 May 2014 11:34:23 -0400
Subject: [PATCH 1/2] some comments on the code

---
 idli/src/databaseImplement.cpp | 6 +++++-
 idli/src/objectDetect.cpp      | 3 ++-
 idli/src/objectHaarParams.cpp  | 1 +
 idli/src/processItem.cpp       | 3 ++-
 4 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/idli/src/databaseImplement.cpp b/idli/src/databaseImplement.cpp
index 415177e..6161997 100644
--- a/idli/src/databaseImplement.cpp
+++ b/idli/src/databaseImplement.cpp
@@ -1,7 +1,7 @@
 #include <databaseImplement.h>
 
 using namespace std;
-
+// don't bake io into your classes
 void database:: add(itemInfo grocery)
 {
 	ofstream myFile;
@@ -42,8 +42,12 @@ void database:: add(itemInfo grocery)
 	cout << "Data successfully added!" <<endl;
 }
 
+// a functiopn called find usually would be const
+// the name should indicate the effect of the update
 void database :: find(string rfid)
 {
+	// move deckaration into the loop
+	// good place to use auto instead of the explicit type
 	map<string, itemInfo> :: iterator it;
 	for (it=myMap.begin(); it!=myMap.end(); ++it)
 	{
diff --git a/idli/src/objectDetect.cpp b/idli/src/objectDetect.cpp
index e41ce21..733110b 100644
--- a/idli/src/objectDetect.cpp
+++ b/idli/src/objectDetect.cpp
@@ -9,7 +9,7 @@
 using namespace cv;
 using namespace std;
 
-
+// this should be in a class
 
 	int detectAndDisplay( string inputImage, bool cameraCapture ,string *itemName)
 	{
@@ -43,6 +43,7 @@ using namespace std;
 		//-- 3. Apply the classifier to the frame
 		if(!frame.empty())
 		{
+			// yucch. at least use a for loop. even better, use an iterator
 			while(count < l.typeList.size())
 			{
 				objectHaarParam item1(l.typeList[count]);
diff --git a/idli/src/objectHaarParams.cpp b/idli/src/objectHaarParams.cpp
index a23b0f4..5c70d95 100644
--- a/idli/src/objectHaarParams.cpp
+++ b/idli/src/objectHaarParams.cpp
@@ -1,5 +1,6 @@
 #include <ObjectHaarParams.h>
 
+// this looks like mockup code, not real code
 objectHaarParam::objectHaarParam ():
 scaleFactor{-1.1}, minNeighbors{4},
 flag{0}, minSize{Size(10,40)},
diff --git a/idli/src/processItem.cpp b/idli/src/processItem.cpp
index ce074d3..061f007 100644
--- a/idli/src/processItem.cpp
+++ b/idli/src/processItem.cpp
@@ -1,7 +1,8 @@
 #include <processItem.h>
 
 using namespace std;
-
+// why are these parameters strings, instead of things that computers use?
+// (this is an embedded programming class)
 void itemInfo::weightupdate(float wt)
 {
 	status="back in";
-- 
1.8.4.msysgit.0

